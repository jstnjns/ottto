import React, { Component } from 'react';
import { connect } from 'react-redux'
import { bindActionCreators } from 'redux'
import { addRoom } from 'actions/rooms-actions'

import { StyleSheet } from 'react-native'
import { Svg, Path } from 'react-native-svg'
import Icon from 'react-native-vector-icons/Ionicons'

import { Router, Scene, Tabs, Actions, Lightbox } from 'react-native-router-flux';

import ScenesContainer from './scenes/scenes-container';
import RulesContainer from './rules/rules-container';

import RoomsContainer from './rooms/rooms-container';
import RoomsAddContainer from './rooms/rooms-add-container';
import RoomContainer from './room/room-container';

import ModulesContainer from './modules/modules-container';
import ModuleContainer from './module/module-container';

import SettingsContainer from './settings/settings-container';


class Routes extends Component {
  render() {
    return (
      <Router>
        <Lightbox>
          <Tabs key="root"
            tabBarStyle={styles.tabBar}
            showLabel={false}
            activeTintColor={'#157EFB'}>
            <Scene key="modules"
              component={ModulesContainer}
              title="Modules"
              icon={(scene) => {
                return (
                  <Svg width="32" height="32">
                    <Path fill={scene.focused ? '#666' : '#DDD'} d="M18,21.263 C18.842,23.789 24,22.105 24,28 L8,28 C8,22.125 13.158,23.789 14,21.263 L14,19.579 C14,19.579 12.432,18.101 12.318,17.093 C12.318,17.093 11.5,16.788 11.5,15.515 C11.5,14.86 11.813,14.707 11.813,14.707 C11.813,14.707 11.125,13.751 11.125,12.524 C11.125,9.622 13.308,8 16,8 C17.268,8 18,9 18,9 C19.724,9 20.75,10.573 20.75,12.618 C20.75,13.638 20.187,14.707 20.187,14.707 C20.187,14.707 20.5,14.813 20.5,15.515 C20.5,16.528 19.682,17.093 19.682,17.093 C19.568,18.101 18,19.579 18,19.579 L18,21.263 Z M22.75,12.618 C22.75,10.267 21.698,8.399 20.082,7.533 C20.412,5.529 21.777,4 24,4 C25.567,4 26,5 26,5 C27.508,5 28,6.679 28,8.5 C28,9.409 27.663,10.161 27.663,10.161 C27.82,10.253 28,10.491 28,11.06 C28,11.629 27.482,12.266 27.222,12.286 C27.122,13.184 26.332,14.333 26,14.5 L26,16 C26.737,18.25 31,16.75 31,22 L22.99,22 C22.28,21.569 20.543,20.686 20,20.449 C20,20.449 22.5,17.985 22.5,15.515 C22.5,15.18 22.461,14.878 22.392,14.607 C22.578,14.059 22.75,13.353 22.75,12.618 Z M12,20.392 C12,20.392 9.727,21.574 9.023,22 L1,22 C1,18.087 5.187,18.87 6,16.752 L6,15.754 C3.058,15.754 2.116,14.587 2.116,14.587 C3.654,13.355 0.765,5 6,5 C6,5 6.687,4 7.601,4 C10.132,4 11.2,5.462 11.681,7.303 C10.086,8.454 9.125,10.291 9.125,12.524 C9.125,13.402 9.502,14.968 9.948,15.655 C9.751,15.699 9.19,15.743 9,15.743 L9,16.751 C9.237,17.369 9.764,17.738 10.388,18.051 C10.673,18.81 11.457,19.812 12,20.392 Z"></Path>
                  </Svg>
                )
              }}
            />

            <Scene key="rules"
              component={RulesContainer}
              title="Rules"
              icon={(scene) => {
                return (
                  <Svg width="32" height="32">
                    <Path fill={scene.focused ? '#666' : '#DDD'} d="M26,28 L6,28 C4.895,28 4,27.105 4,26 L4,14 C4,12.895 4.895,12 6,12 L26,12 C27.105,12 28,12.895 28,14 L28,26 C28,27.105 27.105,28 26,28 Z M6,10 C5.44771525,10 5,9.55228475 5,9 C5,8.44771525 5.44771525,8 6,8 L26,8 C26.5522847,8 27,8.44771525 27,9 C27,9.55228475 26.5522847,10 26,10 L6,10 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 L25,4 C25.5522847,4 26,4.44771525 26,5 C26,5.55228475 25.5522847,6 25,6 L7,6 Z"></Path>
                  </Svg>
                )
              }}
            />

            <Scene key="roomsScene"
              title="Rooms"
              icon={(scene) => {
                return (
                  <Svg width="32" height="32">
                    <Path fill={scene.focused ? '#666' : '#DDD'} d="M18.3566097,3.76791233 L28.3566097,11.059205 L28.3566097,11.059205 C29.3892906,11.8121628 30,13.0132569 30,14.2912926 L30,24.0841737 L30,24.0841737 C30,26.2933127 28.209139,28.0841737 26,28.0841737 L6,28.0841737 L6,28.0841737 C3.790861,28.0841737 2,26.2933127 2,24.0841737 L2,14.2912926 L2,14.2912926 C2,13.0132569 2.61070942,11.8121628 3.6433903,11.059205 L13.6433903,3.76791233 L13.6433903,3.76791233 C15.0476449,2.74402922 16.9523551,2.74402922 18.3566097,3.76791233 Z"></Path>
                  </Svg>
                )
              }}
              initial={true}>
              <Scene key="rooms"
                initial={true}
                component={RoomsContainer}
                navTransparent
                title="Rooms"
                rightTitle="Add"
                onRight={() => { Actions.addRoom({ test: 'yep' }) }}
              />

              <Scene key="room"
                component={RoomContainer}
                navTransparent
                title="Room"
                rightTitle="Edit"
                onRight={() => { alert('edit') }}
              />
            </Scene>

            <Scene key="scenes"
              component={ScenesContainer}
              title="Scenes"
              icon={(scene) => {
                return (
                  <Svg width="32" height="32">
                    <Path fill={scene.focused ? '#666' : '#DDD'} d="M15.4865,17.4865 L11.711,13.711 C10.766,12.766 9.234,12.766 8.289,13.711 L6,16 L6,23 L26,23 L26,20 L21.711,15.711 C20.766,14.766 19.234,14.766 18.289,15.711 L17.5295,16.4705 L18.681,17.622 C19.104,18.045 19.104,18.73 18.681,19.152 C18.259,19.574 17.579,19.579 17.157,19.157 L15.4865,17.4865 Z M27,6 C28.105,6 29,6.895 29,8 L29,24 C29,25.105 28.105,26 27,26 L5,26 C3.895,26 3,25.105 3,24 L3,8 C3,6.895 3.895,6 5,6 L27,6 Z M24,13 C25.105,13 26,12.105 26,11 C26,9.895 25.105,9 24,9 C22.895,9 22,9.895 22,11 C22,12.105 22.895,13 24,13 Z"></Path>
                  </Svg>
                )
              }}
            />

            <Scene key="settings"
              component={SettingsContainer}
              title="Settings"
              icon={(scene) => {
                return (
                  <Svg width="32" height="32">
                    <Path fill={scene.focused ? '#666' : '#DDD'} d="M14.2679738,14.9992927 L11.1654353,9.62569609 C9.24203824,11.0867995 8,13.3984606 8,16 C8,18.6013705 9.24187702,20.9129004 11.1650608,22.3740194 L14.267704,17.0002414 C14.0974476,16.7060134 14,16.3643868 14,16 C14,15.6354208 14.0975505,15.2936258 14.2679738,14.9992927 L14.2679738,14.9992927 Z M17.7324356,17 C17.3866262,17.5978014 16.7402824,18 16,18 L12.8961948,23.3755194 C13.8506058,23.7776871 14.8993602,24 16,24 C20.0793422,24 23.4459378,20.9461027 23.9380949,17 L17.7324356,17 L17.7324356,17 Z M17.7324356,15 L23.9380949,15 C23.4459378,11.0538973 20.0793422,8 16,8 C14.8995268,8 13.8509233,8.22224557 12.8966281,8.62429805 L16.0003822,14 C16.7405048,14.0001384 17.3866857,14.4023015 17.7324356,15 L17.7324356,15 Z M28,15 C28.552,15 29,15.448 29,16 C29,16.552 28.552,17 28,17 L27.828,17 C27.35,17 26.924,17.337 26.851,17.806 C26.814,18.035 26.77,18.262 26.719,18.486 C26.613,18.95 26.877,19.419 27.316,19.601 L27.472,19.666 C27.982,19.878 28.224,20.463 28.013,20.973 C27.801,21.483 27.216,21.725 26.706,21.514 L26.546,21.448 C26.105,21.265 25.584,21.413 25.332,21.818 C25.21,22.014 25.082,22.206 24.948,22.394 C24.671,22.782 24.735,23.318 25.072,23.655 L25.194,23.777 C25.585,24.167 25.584,24.8 25.194,25.191 C24.804,25.582 24.171,25.582 23.78,25.191 L23.658,25.069 C23.321,24.732 22.785,24.668 22.397,24.945 C22.209,25.079 22.017,25.207 21.821,25.329 C21.416,25.582 21.268,26.102 21.451,26.543 L21.517,26.703 C21.729,27.214 21.486,27.799 20.976,28.01 C20.465,28.222 19.88,27.979 19.669,27.469 L19.604,27.313 C19.422,26.874 18.953,26.61 18.489,26.716 C18.265,26.767 18.038,26.811 17.809,26.848 C17.337,26.924 17,27.35 17,27.828 L17,28 C17,28.552 16.552,29 16,29 C15.448,29 15,28.552 15,28 L15,27.828 C15,27.35 14.663,26.924 14.194,26.851 C13.965,26.814 13.738,26.77 13.514,26.719 C13.05,26.613 12.581,26.877 12.399,27.316 L12.334,27.472 C12.122,27.982 11.537,28.224 11.027,28.013 C10.517,27.801 10.275,27.216 10.486,26.706 L10.552,26.546 C10.735,26.105 10.587,25.584 10.182,25.332 C9.986,25.21 9.794,25.082 9.606,24.948 C9.218,24.671 8.682,24.735 8.345,25.072 L8.223,25.194 C7.833,25.585 7.2,25.584 6.809,25.194 C6.418,24.804 6.418,24.171 6.809,23.78 L6.931,23.658 C7.268,23.321 7.332,22.785 7.055,22.397 C6.921,22.209 6.793,22.017 6.671,21.821 C6.418,21.416 5.898,21.268 5.457,21.451 L5.297,21.517 C4.786,21.729 4.201,21.486 3.99,20.976 C3.778,20.465 4.021,19.88 4.531,19.669 L4.687,19.604 C5.126,19.422 5.39,18.953 5.284,18.489 C5.233,18.265 5.189,18.038 5.152,17.809 C5.076,17.337 4.65,17 4.172,17 L4,17 C3.448,17 3,16.552 3,16 C3,15.448 3.448,15 4,15 L4.172,15 C4.65,15 5.076,14.663 5.151,14.192 C5.188,13.963 5.232,13.736 5.283,13.512 C5.389,13.048 5.125,12.579 4.686,12.397 L4.53,12.332 C4.02,12.12 3.778,11.535 3.989,11.025 C4.201,10.515 4.786,10.273 5.296,10.484 L5.456,10.55 C5.897,10.733 6.418,10.586 6.67,10.18 C6.792,9.984 6.92,9.792 7.053,9.605 C7.33,9.216 7.267,8.681 6.93,8.344 L6.808,8.222 C6.418,7.832 6.418,7.199 6.808,6.808 C7.198,6.417 7.831,6.417 8.222,6.808 L8.344,6.93 C8.681,7.267 9.217,7.33 9.605,7.053 C9.792,6.92 9.984,6.792 10.18,6.67 C10.586,6.418 10.733,5.897 10.549,5.457 L10.483,5.297 C10.271,4.786 10.514,4.201 11.024,3.99 C11.535,3.778 12.12,4.021 12.331,4.531 L12.396,4.687 C12.578,5.126 13.047,5.39 13.511,5.284 C13.735,5.233 13.962,5.189 14.191,5.152 C14.663,5.076 15,4.65 15,4.172 L15,4 C15,3.448 15.448,3 16,3 C16.552,3 17,3.448 17,4 L17,4.172 C17,4.65 17.337,5.076 17.807,5.151 C18.036,5.188 18.263,5.232 18.487,5.283 C18.951,5.389 19.42,5.125 19.602,4.686 L19.667,4.53 C19.879,4.02 20.464,3.778 20.974,3.989 C21.484,4.201 21.726,4.786 21.515,5.296 L21.449,5.456 C21.266,5.897 21.414,6.418 21.819,6.67 C22.015,6.792 22.207,6.92 22.395,7.054 C22.783,7.331 23.319,7.267 23.656,6.93 L23.777,6.806 C24.167,6.415 24.8,6.415 25.191,6.806 C25.582,7.196 25.582,7.829 25.191,8.22 L25.069,8.342 C24.732,8.679 24.668,9.215 24.945,9.603 C25.079,9.791 25.207,9.983 25.329,10.179 C25.582,10.584 26.102,10.732 26.543,10.549 L26.703,10.483 C27.214,10.271 27.799,10.514 28.01,11.024 C28.222,11.535 27.979,12.12 27.469,12.331 L27.313,12.396 C26.874,12.578 26.61,13.047 26.716,13.511 C26.767,13.735 26.811,13.962 26.848,14.191 C26.924,14.663 27.35,15 27.828,15 L28,15 Z"></Path>
                  </Svg>
                )
              }}
            />
          </Tabs>


          <Scene key="showModule"
            component={ModuleContainer} />

          <Scene key="addRoom"
            component={RoomsAddContainer} />
        </Lightbox>
      </Router>
    )
  }

  renderIcon(scene) {
    const iconName = scene.focused
      ? scene.iconName
      : scene.iconName + '-outline'
    const colorName = scene.focused
      ? scene.activeTintColor
      : scene.tintColor

    return (
      <Icon name={iconName} size={28}
        color={colorName} />
    )
  }
}


const styles = StyleSheet.create({
  tabBar: {
    backgroundColor: 'white',
    borderTopWidth: 0,
  }
})


export default connect(
  (state) => ( {} ),
  (dispatch) => ( bindActionCreators({ addRoom }, dispatch) )
)(Routes)
